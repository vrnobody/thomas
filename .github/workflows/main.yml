name: main

on:
  workflow_dispatch:
  push:
    tags:
      - '**'

env:
  projName: Thomas
  verStr: '1.1.1'
  desc: '数空格数到吐血，这就是对人类友好吗？❤了❤了'

jobs:
  create_release:
    name: Create release
    runs-on: windows-2019
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.verStr }}
          name: 'v${{ env.verStr }}'
          draft: true
          prerelease: false

  build_ubuntu:
    name: build bins for unix
    runs-on: ubuntu-latest
    needs: create_release

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Docker build
        shell: bash
        run: |
          ARCHS=('mips.musl' 'mipsel.musl' 'aarch64.musl' 'arm.musleabi' 'armv7.musleabi' 'i686.musl' 'x86_64.musl')
          for arch in "${ARCHS[@]}"
          do
            left="${arch%.*}"
            right="${arch#*.}"
            echo
            echo "${arch}=${left}-${right}"
            image="messense/rust-musl-cross:${left}-${right}"
            docker pull ${image}
            docker run --rm -v "$(pwd)":/home/rust/src ${image} cargo build --release
            arch="${left}-unknown-linux-${right}"
            zip -q -j thomas-linux-${left}.zip target/${arch}/release/server target/${arch}/release/client
          done

      - name: Upload unix bins
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.verStr }}
          draft: true
          prerelease: false
          files: |
            thomas-linux-mips.zip
            thomas-linux-mipsel.zip
            thomas-linux-aarch64.zip
            thomas-linux-arm.zip
            thomas-linux-armv7.zip
            thomas-linux-i686.zip
            thomas-linux-x86_64.zip

  build_windows:
    name: build windows binaries
    runs-on: windows-2019
    needs: create_release

    steps:        
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Build
        run: cargo build --release

      - name: Create assets
        shell: pwsh
        run: Compress-Archive -Path target/release/*.exe thomas-win-x86_64.zip

      - name: Upload unix bins
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.verStr }}
          draft: true
          prerelease: false
          files: |
            thomas-win-x86_64.zip
